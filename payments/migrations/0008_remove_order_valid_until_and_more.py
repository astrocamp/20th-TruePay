# Generated by Django 5.2.5 on 2025-09-11 04:19

from django.db import migrations, models


def remove_valid_until_if_exists(apps, schema_editor):
    """安全地刪除 valid_until 欄位，如果它存在的話"""
    from django.db import connection
    cursor = connection.cursor()

    # 檢查欄位是否存在
    cursor.execute("""
        SELECT column_name
        FROM information_schema.columns
        WHERE table_name = 'orders' AND column_name = 'valid_until'
    """)

    if cursor.fetchone():
        # 如果欄位存在，則刪除它
        cursor.execute("ALTER TABLE orders DROP COLUMN valid_until")


def reverse_remove_valid_until(apps, schema_editor):
    """反向操作：重新加入 valid_until 欄位"""
    from django.db import connection
    cursor = connection.cursor()
    cursor.execute("""
        ALTER TABLE orders
        ADD COLUMN valid_until TIMESTAMP WITH TIME ZONE NULL
    """)


class Migration(migrations.Migration):

    dependencies = [
        ("payments", "0007_bridge_to_0008"),
    ]

    operations = [
        migrations.RunPython(
            remove_valid_until_if_exists,
            reverse_remove_valid_until,
        ),
        migrations.AddField(
            model_name="orderitem",
            name="expiry_notification_sent",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="到期通知發送時間"
            ),
        ),
        migrations.AlterField(
            model_name="orderitem",
            name="status",
            field=models.CharField(
                choices=[
                    ("unused", "未使用"),
                    ("used", "已使用"),
                    ("expired", "已過期"),
                ],
                default="unused",
                max_length=20,
                verbose_name="票券狀態",
            ),
        ),
    ]
